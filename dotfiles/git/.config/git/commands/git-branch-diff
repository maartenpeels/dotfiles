#!/bin/bash

# Set the script to exit immediately if any command fails
set -e

function get_default_branch() {
  # First try to get from origin/HEAD
  remote_head=$(git rev-parse --abbrev-ref origin/HEAD 2>/dev/null)
  if [[ -n "$remote_head" ]]; then
    echo "$remote_head"
    return
  fi

  # Otherwise try main or master locally
  git branch --sort=-committerdate -l main master | head -1 | sed 's/^[^a-zA-Z]*//'
}

function determine_branch() {
  # Get the default branch
  local default_branch=$(get_default_branch)

  # Check if we found a default branch
  if [[ -z $default_branch ]]; then
    echo "No default branch found." 1>&2
    exit 1
  fi

  # Use the first argument as branch if provided, otherwise use default branch
  if [ $# -eq 1 ]; then
    echo "$1"
  else
    echo "$default_branch"
  fi
}

# Determine which branch to use
BRANCH=$(determine_branch "$@")
echo "Comparing with branch: $BRANCH"

# Check if the branch exists
if [ ! $(git rev-parse --verify $BRANCH 2>/dev/null) ]; then
  echo "Branch '$BRANCH' does not exist." 1>&2
  exit 1
fi

# Get the base commit
BASE_COMMIT=$(git merge-base $BRANCH HEAD)

if [[ -z $BASE_COMMIT ]]; then
  echo "HEAD has no common base with branch '$BRANCH'." 1>&2
  exit 1
fi

# Open the diff
git diffview $BASE_COMMIT
